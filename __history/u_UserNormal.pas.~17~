unit u_UserNormal;

interface

uses dm_co2;

type
  UserData = class(tObject)
  Private
    fUsername: string;
    fArrCarList: array of array of integer;
    fUserID: integer;
    fisFirst: boolean;
  public
    constructor UserCreate(sUsername: string);
    function isFirstAccess: boolean;
    procedure LoadCar;

  end;

implementation

{ UserData }

function UserData.isFirstAccess: boolean;
begin
  result := fisFirst
end;

procedure UserData.LoadCar;
var
  iCarlength, iColumn: integer;
begin
iCarlength:=0;
iColumn:=0;
  with dmco2 do
  begin
    ADOCarList.First;
    while not ADOCarList.Eof do
      if ADOCarList['UserId'] = fUserID then
      begin

        setlength(fArrCarList[iCarlength], 2);
        fArrCarList[0, 0] := ADOCarList['CarID'];
        fArrCarList[0, 1] := ADOCarList['CurrentMileage'];
        inc(iCarlength);
      end
      else
       ADOCarList.Next;
  end;
end;

constructor UserData.UserCreate(sUsername: string);
var
  bFound: boolean;
begin
  fUsername := sUsername;
  with dmco2 do
  begin
    ADOUsers.First;
    bFound := false;
    while (not ADOUsers.Eof) and (bFound = false) do
    begin
      if ADOUsers['Username'] = fUsername then
      begin
        fUserID := ADOUsers['UserID'];
        if ADOUsers['Carbon_Footprint'] = 0 then
          fisFirst := true;

        bFound := true;
      end;
      ADOUsers.Next;

    end;
  end;
end;

end.
